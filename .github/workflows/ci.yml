name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  security_hardening:
    name: Check security hardening
    runs-on: ubuntu-latest
    steps:
    - name: Clone the repository
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
    # TODO: - name: Ensure SHA pinned actions
    #   uses: zgosalvez/github-actions-ensure-sha-pinned-actions@e70e07ef05f0a3bf1483fde3c50eeab9c1805041 # v1.0.1

  testing:
    name: Run ${{ matrix.category }} testing
    needs: security_hardening
    runs-on: ubuntu-latest
    strategy:
      matrix:
        category: [static, unit, widget]
    steps:
    - name: Clone the repository
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
      with:
        path: code
    - name: Get Flutter version
      id: get-flutter-version
      uses: zgosalvez/github-actions-get-flutter-version-env@8c616b4685d25cceda9bafa61f6c72670f6aa01e # v1.1.1
      with:
        pubspec-file-path: code/pubspec.yaml
    - name: Cache Flutter packages
      id: cache
      uses: actions/cache@0781355a23dac32fd3bac414512f4b903437991a # v2.1.3
      with:
        path: flutter
        key: pub-${{ env.cache-name }}-${{ steps.get-flutter-version.outputs.version }}-${{ hashFiles('code/pubspec.lock') }}
        restore-keys: |
          pub-${{ env.cache-name }}-${{ steps.get-flutter-version.outputs.version }}-
          pub-${{ env.cache-name }}-
          pub-
      env:
        cache-name: cache-flutter-packages
    - name: Clone the Flutter repository
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
      with:
        repository: flutter/flutter
        ref: ${{ steps.get-flutter-version.outputs.version }}
        path: flutter
    - name: Add the flutter tool to the path
      run: |
        echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
        echo "$GITHUB_WORKSPACE/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
    - name: Populate the Flutter tool's cache of binary artifacts
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        flutter config --no-analytics
        flutter precache
    - name: Get Flutter packages
      if: steps.cache.outputs.cache-hit != 'true'
      run: flutter pub get
      working-directory: code

    # static testing
    - name: Analyze Flutter
      if: matrix.category == 'static'
      uses: zgosalvez/dartanalyzer-annotations-action@feature-problem-matcher
      with:
        working-directory: code
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    # unit testing
    - name: Run Flutter ${{ matrix.category }} tests
      if: matrix.category != 'static'
      run: flutter test --coverage --coverage-path=./coverage/lcov.${{ matrix.category }}.info test/${{ matrix.category }}s
      working-directory: code
    - name: Upload code coverage to GitHub
      if: matrix.category != 'static'
      uses: actions/upload-artifact@726a6dcd0199f578459862705eed35cda05af50b # v2.2.1
      with:
        name: code-coverage
        path: code/coverage/lcov.${{ matrix.category }}.info

  coverage_report:
    name: Generate coverage report
    needs: testing
    runs-on: ubuntu-latest
    steps:
    - name: Clone the repository
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
    - name: Install lcov
      run: sudo apt-get install lcov
    - name: Download code coverage from GitHub
      uses: actions/download-artifact@f144d3c3916a86f4d6b11ff379d17a49d8f85dbc # v2.0.7
      with:
        name: code-coverage
        path: coverage
    - name: Create HTML output for coverage data
      run: genhtml coverage/lcov.unit.info coverage/lcov.widget.info --output-directory coverage/html
    - name: Upload code coverage report to GitHub
      uses: actions/upload-artifact@726a6dcd0199f578459862705eed35cda05af50b # v2.2.1
      with:
        name: code-coverage-report
        path: coverage/html
